text = element_text(family = "Helvetica")) +
#geom_point(data = Final_list, mapping = aes(x = geom_mean, y = CV), size = 3, alpha = 1, color = "#CC6677") +
coord_cartesian(expand = TRUE, xlim = c(10, 1e5), ylim = c(0.1, 8))
ggsave("../Figures/Figure1D_Step2.svg", plot = last_plot(), width = 8.4, height = 6, units = "cm", dpi = 600, scale = 3)
#For cutoff 0.03 (No core type info)
ggplot(data = Tissue, mapping = aes(x = geom_mean, y = CV)) +
geom_point(size = 2, alpha = 0.3, color = "#DDCC77") +
scale_shape_manual(values = c(21,22,23,24,25,20)) +
theme_classic() +
scale_x_log10(labels = trans_format("log10", math_format(10^.x)))+
annotation_logticks(base=10, sides = "bl") +
scale_y_log10(breaks = c(0.1,round(quantile(Tissue$CV, cutoff), digits = 2), 0.3,1,3.0), labels = c("0.1", round(quantile(Tissue$CV, cutoff), digits = 2), "0.3","1","3.0")) +
xlab(label = bquote(Geometric~Mean~(log[10]))) +
ylab(label = bquote(Coefficient~of~Variation~(log[10]))) +
guides(alpha = F) +
labs(color = "Core Type", shape = "Core Type", fill = "Core Type") +
gghighlight(CV <= quantile(Tissue$CV, cutoff))+
geom_hline(yintercept=quantile(Tissue$CV, cutoff), linetype='dotted', col = 'red')+
#geom_point(data = Annotated_Tissue, mapping = aes(x = geom_mean, y = CV), size =4, alpha = 0.6, color = "black") +
#geom_text_repel(data = Annotated_Tissue, mapping = aes(label = Symbol),
#                box.padding = 1,
#                show.legend = FALSE,
#                size = 8) + #this removes the 'a' from the legend
theme(axis.text.y = element_text(color = c("black", "red", "black", "black", "black"),
size = 20),
axis.title.x = element_text(size = 25),
axis.title.y = element_text(size = 25),
axis.text.x = element_text(size = 20),
axis.ticks.y = element_line(
color = c("black", "red", "black", "black", "black"),
size = c(0.5, 1, 0.5, 0.5, 0.5)),
text = element_text(family = "Helvetica")) +
geom_point(data = Final_list, mapping = aes(x = geom_mean, y = CV), size = 3, alpha = 1, color = "#CC6677") +
coord_cartesian(expand = TRUE, xlim = c(10, 1e5), ylim = c(0.1, 8))
ggsave("../Figures/Figure1D_Step3.svg", plot = last_plot(), width = 8.4, height = 6, units = "cm", dpi = 600, scale = 3)
#For cutoff 0.03 (No core type info)
ggplot(data = Tissue, mapping = aes(x = geom_mean, y = CV)) +
geom_point(size = 2, alpha = 0.3, color = "#DDCC77") +
scale_shape_manual(values = c(21,22,23,24,25,20)) +
theme_classic() +
scale_x_log10(labels = trans_format("log10", math_format(10^.x)))+
annotation_logticks(base=10, sides = "bl") +
scale_y_log10(breaks = c(0.1,round(quantile(Tissue$CV, cutoff), digits = 2), 0.3,1,3.0), labels = c("0.1", round(quantile(Tissue$CV, cutoff), digits = 2), "0.3","1","3.0")) +
xlab(label = bquote(Geometric~Mean~(log[10]))) +
ylab(label = bquote(Coefficient~of~Variation~(log[10]))) +
guides(alpha = F) +
labs(color = "Core Type", shape = "Core Type", fill = "Core Type") +
gghighlight(CV <= quantile(Tissue$CV, cutoff))+
geom_hline(yintercept=quantile(Tissue$CV, cutoff), linetype='dotted', col = 'red')+
geom_point(data = Annotated_Tissue, mapping = aes(x = geom_mean, y = CV), size =4, alpha = 0.6, color = "black") +
geom_text_repel(data = Annotated_Tissue, mapping = aes(label = Symbol),
box.padding = 1,
show.legend = FALSE,
size = 8) + #this removes the 'a' from the legend
theme(axis.text.y = element_text(color = c("black", "red", "black", "black", "black"),
size = 20),
axis.title.x = element_text(size = 25),
axis.title.y = element_text(size = 25),
axis.text.x = element_text(size = 20),
axis.ticks.y = element_line(
color = c("black", "red", "black", "black", "black"),
size = c(0.5, 1, 0.5, 0.5, 0.5)),
text = element_text(family = "Helvetica")) +
geom_point(data = Final_list, mapping = aes(x = geom_mean, y = CV), size = 3, alpha = 1, color = "#CC6677") +
coord_cartesian(expand = TRUE, xlim = c(10, 1e5), ylim = c(0.1, 8))
Final_df <- read.csv("../Dat/Final_df.csv")[,-1]
Output_df <- Final_df[0,]
for (n in unique(Final_df$Experiment)){
Cur_df <- subset(Final_df, Experiment == n) %>% filter(Signal == "YB_Ratio") %>% group_by(Leaf) %>% summarise(Median = median(Value))
MedofMed <- median(Cur_df$Median)
Cur_df <- Cur_df %>% mutate(dist = abs(Median - MedofMed)) %>% top_n(-3)
Median_df <- Final_df %>% filter(Experiment == n & Leaf %in% Cur_df$Leaf)
Output_df <- rbind(Output_df, Median_df)
}
library(tidyverse)
Final_df <- read.csv("../Dat/Final_df.csv")[,-1]
Output_df <- Final_df[0,]
for (n in unique(Final_df$Experiment)){
Cur_df <- subset(Final_df, Experiment == n) %>% filter(Signal == "YB_Ratio") %>% group_by(Leaf) %>% summarise(Median = median(Value))
MedofMed <- median(Cur_df$Median)
Cur_df <- Cur_df %>% mutate(dist = abs(Median - MedofMed)) %>% top_n(-3)
Median_df <- Final_df %>% filter(Experiment == n & Leaf %in% Cur_df$Leaf)
Output_df <- rbind(Output_df, Median_df)
}
#Drop the Null_YFP and add back in all of it
Final_df2 <- Output_df %>% filter(!(Experiment == "Null_YFP"))
Final_df2 <- rbind(Final_df2, Final_df %>% filter(Experiment == "Null_YFP"))
Final_df3 <- Final_df2 %>% filter(Signal == 'yfp')
Med_df <- Final_df3 %>% filter(Experiment == "Null_YFP") %>% group_by(Leaf) %>% summarize(Med = median(Value))
Updated_df <- Final_df[0,]
for (n in 1:nrow(Med_df)) {
cur_leaf <- Med_df$Leaf[n]
cur_med <- Med_df$Med[n]
update_df <- Final_df3 %>% filter(Leaf == cur_leaf)
update_df$Value <- update_df$Value - cur_med
Updated_df <- rbind(Updated_df, update_df)
}
#Append new yfp to rest of Signal and recalculate YB_Ratio
Final_df4 <- Final_df2 %>% filter(Signal != "yfp")
Final_df4 <- rbind(Final_df4, Updated_df) %>% pivot_wider(names_from = Signal, values_from = Value) %>% mutate(YB_Ratio = yfp/mTurquoise) %>% pivot_longer(cols = c('mTurquoise', 'mScarlet', 'YB_Ratio', 'yfp'), names_to = "Signal", values_to = "Value")
No_control <- Final_df4 %>% filter(Experiment != "Null_YFP")
Keep_list <- unique(No_control$Leaf)
Null_kept <- Final_df4 %>% filter(Experiment == "Null_YFP" & Leaf %in% Keep_list)
Final_df5 <- rbind(No_control, Null_kept)
#remove repression experiments from Set6:
Final_df6 <- Final_df5 %>% filter(!grepl("\\+",Experiment))
#experiments to be removed
remove_list <- c("NULL", "AT2G29080-4723", "AT1G64550-4723", "AT3G08530-4723", "AT3G08530(r7,r5)-4723", "AT3G18480(r3,r6)-4723", "AT2G26780-4723", "54390_RUBY", "AT1G54080-4673(594)", "AT1G64550(E,A)-4723", "AT1G64990-4673(604)", "AT1G64550(E,A)-4673", "AT1G54080-4673(514)", "AT1G64990", "AT2G26780", "AT5G10630(593)-4673", "AT5G10630(640)-4673")
Final_df6 <- Final_df6 %>% drop_na()
signal <- 'YB_Ratio'
Final_df6 <- Final_df6 %>% filter(Signal == signal)
#Setup Null_YFP as first item in factor
Final_df6 <- Final_df6 %>% mutate(Experiment = fct_relevel(Experiment, "Null_YFP"))
library(DescTools)
Stat_df <- Final_df6 %>% filter(!(Experiment %in% c(remove_list, "Null_YFP")))
Null_df <- Final_df6 %>% filter(Experiment == "Null_YFP")
Sig_output <- data.frame(
Experiment = as.character(),
pval = as.double(),
warning = as.logical()
)
for (n in unique(Stat_df$Experiment)){
cur_stat <- Stat_df %>% filter(Experiment == n)
cur_null <- Null_df %>% filter(Leaf %in% cur_stat$Leaf)
cur_df <- rbind(cur_stat, cur_null)
Sig_df <- DunnettTest(x = cur_df$Value, g = cur_df$Experiment, control = 'Null_YFP')
if (median(cur_stat$Value) < median(cur_null$Value)) {
alarm <- TRUE #This was added in case the difference is significant but LOWER than control
} else {alarm <- FALSE}
cur_output <- data.frame(
Experiment = n,
pval = Sig_df$Null_YFP[4],
warning = alarm
)
Sig_output <- rbind(Sig_output, cur_output)
}
Sig_output2 <- Sig_output %>% mutate(
Sig = case_when(
pval > 0.05 ~ "ns",
pval < 0.05 ~ ""
)
)
write.csv(Sig_output2, "../../Pipeline/Data/Tobacco_Significance.csv")
Final_df6 <- Final_df6%>%
mutate(Experiment = fct_relevel(Experiment, "AT1G54080", "AT1G71860", "AT4G13780", "AT5G10630", "AT5G42470", "AT5G60160", after = Inf)) #ns are placed at the end
SD_Null <- Final_df6 %>% filter(Experiment == "Null_YFP") %>% group_by(Leaf) %>% summarize(SD = sd(Value))
MedofSD_Null <- median(SD_Null$SD)
SD_Null <- SD_Null %>% mutate(dist = abs(SD - MedofSD_Null)) %>% top_n(-3)
SD_df <- Final_df6 %>% filter(Experiment == "Null_YFP" & Leaf %in% SD_Null$Leaf)
No_Null <- Final_df6 %>% filter(Experiment != "Null_YFP")
Final_df7 <- rbind(No_Null, SD_df)
Final_color <- Final_df7 %>% mutate(color_list = 1)
Final_color <- Final_color[0,]
for(n in unique(Final_df7$Experiment)) {
curr_exp <- subset(Final_df7, Experiment == n)
run <- 1
for(m in unique(curr_exp$Leaf)) {
curr_leaf <- subset(curr_exp, Leaf == m)
out <- curr_leaf %>% mutate(color_list = run)
Final_color <- rbind(Final_color, out)
run <- run + 1
}
}
Final_df8 <- Final_color %>% filter(!(Experiment %in% c(remove_list)))
Final_df8 <- transform(Final_df8,
Experiment=plyr::revalue(Experiment, c("Null_YFP" = "Neg. Control")))
#Rename some factors for cleanup
Final_df8 <- transform(Final_df8,
Experiment=plyr::revalue(Experiment, c("AT1G64990-4673(645)" = "AT1G64990",
"AT2G26780-4673" = "AT2G26780")))
Sig_output2 <- transform(Sig_output2,
Experiment=plyr::revalue(Experiment, c("AT1G64990-4673(645)" = "AT1G64990",
"AT2G26780-4673" = "AT2G26780")))
#Extract Median from each group:
Med_df <- Final_df8 %>% group_by(Experiment, Leaf) %>% summarize(Median = median(Value))
Key_df <- Final_df8 %>% distinct(Experiment, Leaf, .keep_all = TRUE)
Med_df2 <- left_join(Med_df, Key_df, by = c("Experiment", "Leaf"))
#Load in Fonts
font_add("Helvetica", "C:/Users/ericy/AppData/Local/Microsoft/Windows/Fonts/Helvetica.ttf")
showtext_auto()
showtext_opts(dip = 600)
#Define custom Pallette from CUD Colour blind Pallette:
CUD = c("#648FFF", "#785EF0", "#DC267F")
short_plot <- ggplot() +
geom_quasirandom( #beeswarm plot
data = Final_df8 %>% filter(Experiment != "AT1G64550(E,A)"),
mapping = aes(x = Experiment, y = Value, fill = as.character(color_list)),
size = 1,
dodge.width = 0.6,
alpha = 0.6,
pch = 21,
colour = "NA") +
geom_boxplot( #Median of Experiment
data = Final_df8 %>% filter(Experiment != "AT1G64550(E,A)"),
mapping = aes(x = Experiment, y = Value),
alpha = 0.3,
outlier.shape = NA,
lwd = 0.7,
fatten = 2
) +
geom_point( #Median of leaf
data = Med_df2 %>% filter(Experiment != "AT1G64550(E,A)"),
mapping = aes(x = Experiment, y = Median, fill = as.character(color_list), group = as.character(color_list)),
position = position_dodge(width = 0.6),
size = 2,
alpha = 0.6,
pch = 21,
colour = "black") +
geom_segment(
aes(x = 22.7, xend = 28.3, y = 20, yend = 20)) +
annotate(
"text", x = 25.5, y = 21.5, label = "NS", size = 3) +
scale_fill_manual(values = CUD) +
theme_classic() +
coord_cartesian(ylim = c(-20, 60)) +
theme(
legend.position ="none",
axis.text.x = element_text(angle = 35, hjust=1),
axis.title.x = element_blank(),
text = element_text(family = "Helvetica", size = 12)) +
ylab("Normalized Fluorescence")
library(readxl)
library(tidyverse)
library(ggplot2)
library(ggbeeswarm)
library(readxl)
library(tidyverse)
library(ggplot2)
library(ggbeeswarm)
library(confintr)
library(showtext)
library(svglite)
#Load in Fonts
font_add("Helvetica", "C:/Users/ericy/AppData/Local/Microsoft/Windows/Fonts/Helvetica.ttf")
showtext_auto()
showtext_opts(dip = 600)
#Define custom Pallette from CUD Colour blind Pallette:
CUD = c("#648FFF", "#785EF0", "#DC267F")
short_plot <- ggplot() +
geom_quasirandom( #beeswarm plot
data = Final_df8 %>% filter(Experiment != "AT1G64550(E,A)"),
mapping = aes(x = Experiment, y = Value, fill = as.character(color_list)),
size = 1,
dodge.width = 0.6,
alpha = 0.6,
pch = 21,
colour = "NA") +
geom_boxplot( #Median of Experiment
data = Final_df8 %>% filter(Experiment != "AT1G64550(E,A)"),
mapping = aes(x = Experiment, y = Value),
alpha = 0.3,
outlier.shape = NA,
lwd = 0.7,
fatten = 2
) +
geom_point( #Median of leaf
data = Med_df2 %>% filter(Experiment != "AT1G64550(E,A)"),
mapping = aes(x = Experiment, y = Median, fill = as.character(color_list), group = as.character(color_list)),
position = position_dodge(width = 0.6),
size = 2,
alpha = 0.6,
pch = 21,
colour = "black") +
geom_segment(
aes(x = 22.7, xend = 28.3, y = 20, yend = 20)) +
annotate(
"text", x = 25.5, y = 21.5, label = "NS", size = 3) +
scale_fill_manual(values = CUD) +
theme_classic() +
coord_cartesian(ylim = c(-20, 60)) +
theme(
legend.position ="none",
axis.text.x = element_text(angle = 35, hjust=1),
axis.title.x = element_blank(),
text = element_text(family = "Helvetica", size = 12)) +
ylab("Normalized Fluorescence")
tall_plot <- ggplot() +
geom_quasirandom( #beeswarm plot
data = Final_df8  %>% filter(Experiment %in% c("AT1G64550(E,A)", "AT1G64550", "Neg. Control")),
mapping = aes(x = Experiment, y = Value, fill = as.character(color_list)),
size = 1,
dodge.width = 0.6,
alpha = 0.7,
pch = 21,
colour = "NA") +
geom_boxplot( #Median of Experiment
data = Final_df8 %>% filter(Experiment %in% c("AT1G64550(E,A)", "AT1G64550", "Neg. Control")),
mapping = aes(x = Experiment, y = Value),
alpha = 0.3,
outlier.shape = NA,
lwd = 0.7,
fatten = 2
) +
geom_point( #Median of leaf
data = Med_df2  %>% filter(Experiment %in% c("AT1G64550(E,A)", "AT1G64550", "Neg. Control")),
mapping = aes(x = Experiment, y = Median, fill = as.character(color_list), group = as.character(color_list)),
position = position_dodge(width = 0.6),
size = 2,
alpha = 0.6,
pch = 21,
colour = "black") +
scale_fill_manual(values = CUD) +
theme_classic() +
theme(
legend.position ="none",
axis.text.x = element_text(angle = 35, hjust=1),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
text = element_text(family = "Helvetica", size = 12))
library(patchwork)
short_plot + tall_plot + plot_layout(widths = c(9,1))
#ggsave("../Figures/Figure2.svg", plot = last_plot(), width = 8.4, height = 4.2, units = "cm", dpi = 600, scale = 3)
short_plot <- ggplot() +
geom_quasirandom( #beeswarm plot
data = Final_df8 %>% filter(Experiment != "AT1G64550(E,A)"),
mapping = aes(x = Experiment, y = Value),
size = 1,
dodge.width = 0.6,
alpha = 0.6,
pch = 21,
colour = "NA") +
geom_boxplot( #Median of Experiment
data = Final_df8 %>% filter(Experiment != "AT1G64550(E,A)"),
mapping = aes(x = Experiment, y = Value),
alpha = 0.3,
outlier.shape = NA,
lwd = 0.7,
fatten = 2
) +
geom_segment(
aes(x = 22.7, xend = 28.3, y = 20, yend = 20)) +
annotate(
"text", x = 25.5, y = 21.5, label = "NS", size = 3) +
scale_fill_manual(values = CUD) +
theme_classic() +
coord_cartesian(ylim = c(-20, 60)) +
theme(
legend.position ="none",
axis.text.x = element_text(angle = 35, hjust=1),
axis.title.x = element_blank(),
text = element_text(family = "Helvetica", size = 12)) +
ylab("Normalized Fluorescence")
tall_plot <- ggplot() +
geom_quasirandom( #beeswarm plot
data = Final_df8  %>% filter(Experiment %in% c("AT1G64550(E,A)", "AT1G64550", "Neg. Control")),
mapping = aes(x = Experiment, y = Value, fill = as.character(color_list)),
size = 1,
dodge.width = 0.6,
alpha = 0.7,
pch = 21,
colour = "NA") +
geom_boxplot( #Median of Experiment
data = Final_df8 %>% filter(Experiment %in% c("AT1G64550(E,A)", "AT1G64550", "Neg. Control")),
mapping = aes(x = Experiment, y = Value),
alpha = 0.3,
outlier.shape = NA,
lwd = 0.7,
fatten = 2
) +
geom_point( #Median of leaf
data = Med_df2  %>% filter(Experiment %in% c("AT1G64550(E,A)", "AT1G64550", "Neg. Control")),
mapping = aes(x = Experiment, y = Median, fill = as.character(color_list), group = as.character(color_list)),
position = position_dodge(width = 0.6),
size = 2,
alpha = 0.6,
pch = 21,
colour = "black") +
scale_fill_manual(values = CUD) +
theme_classic() +
theme(
legend.position ="none",
axis.text.x = element_text(angle = 35, hjust=1),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
text = element_text(family = "Helvetica", size = 12))
short_plot + tall_plot + plot_layout(widths = c(9,1))
short_plot <- ggplot() +
geom_quasirandom( #beeswarm plot
data = Final_df8 %>% filter(Experiment != "AT1G64550(E,A)"),
mapping = aes(x = Experiment, y = Value),
size = 1,
dodge.width = 0.6,
alpha = 0.6,
pch = 21,
colour = 'steelblue') +
geom_boxplot( #Median of Experiment
data = Final_df8 %>% filter(Experiment != "AT1G64550(E,A)"),
mapping = aes(x = Experiment, y = Value),
alpha = 0.3,
outlier.shape = NA,
lwd = 0.7,
fatten = 2
) +
geom_point( #Median of leaf
data = Med_df2 %>% filter(Experiment != "AT1G64550(E,A)"),
mapping = aes(x = Experiment, y = Median, fill = as.character(color_list), group = as.character(color_list)),
position = position_dodge(width = 0.6),
size = 2,
alpha = 0.6,
pch = 21,
colour = "black") +
geom_segment(
aes(x = 22.7, xend = 28.3, y = 20, yend = 20)) +
annotate(
"text", x = 25.5, y = 21.5, label = "NS", size = 3) +
scale_fill_manual(values = CUD) +
theme_classic() +
coord_cartesian(ylim = c(-20, 60)) +
theme(
legend.position ="none",
axis.text.x = element_text(angle = 35, hjust=1),
axis.title.x = element_blank(),
text = element_text(family = "Helvetica", size = 12)) +
ylab("Normalized Fluorescence")
short_plot + tall_plot + plot_layout(widths = c(9,1))
short_plot <- ggplot() +
geom_quasirandom( #beeswarm plot
data = Final_df8 %>% filter(Experiment != "AT1G64550(E,A)"),
mapping = aes(x = Experiment, y = Value),
size = 1,
dodge.width = 0.6,
alpha = 0.6,
pch = 21,
colour = 'steelblue') +
geom_boxplot( #Median of Experiment
data = Final_df8 %>% filter(Experiment != "AT1G64550(E,A)"),
mapping = aes(x = Experiment, y = Value),
alpha = 0.3,
outlier.shape = NA,
lwd = 0.7,
fatten = 2
) +
geom_segment(
aes(x = 22.7, xend = 28.3, y = 20, yend = 20)) +
annotate(
"text", x = 25.5, y = 21.5, label = "NS", size = 3) +
scale_fill_manual(values = CUD) +
theme_classic() +
coord_cartesian(ylim = c(-20, 60)) +
theme(
legend.position ="none",
axis.text.x = element_text(angle = 35, hjust=1),
axis.title.x = element_blank(),
text = element_text(family = "Helvetica", size = 12)) +
ylab("Normalized Fluorescence")
short_plot + tall_plot + plot_layout(widths = c(9,1))
short_plot
ggsave("../Figures/Figure2_simplified.svg", plot = last_plot(), width = 8.4, height = 4.2, units = "cm", dpi = 600, scale = 3)
short_plot <- ggplot() +
geom_quasirandom( #beeswarm plot
data = Final_df8 %>% filter(Experiment != "AT1G64550(E,A)"),
mapping = aes(x = Experiment, y = Value),
size = 1,
dodge.width = 0.6,
alpha = 0.6,
pch = 21,
fill = 'steelblue') +
geom_boxplot( #Median of Experiment
data = Final_df8 %>% filter(Experiment != "AT1G64550(E,A)"),
mapping = aes(x = Experiment, y = Value),
alpha = 0.3,
outlier.shape = NA,
lwd = 0.7,
fatten = 2
) +
geom_segment(
aes(x = 22.7, xend = 28.3, y = 20, yend = 20)) +
annotate(
"text", x = 25.5, y = 21.5, label = "NS", size = 3) +
scale_fill_manual(values = CUD) +
theme_classic() +
coord_cartesian(ylim = c(-20, 60)) +
theme(
legend.position ="none",
axis.text.x = element_text(angle = 35, hjust=1),
axis.title.x = element_blank(),
text = element_text(family = "Helvetica", size = 12)) +
ylab("Normalized Fluorescence")
short_plot
short_plot <- ggplot() +
geom_quasirandom( #beeswarm plot
data = Final_df8 %>% filter(Experiment != "AT1G64550(E,A)"),
mapping = aes(x = Experiment, y = Value),
size = 1,
dodge.width = 0.6,
alpha = 0.6,
pch = 21,
color = 'steelblue',
fill = 'steelblue') +
geom_boxplot( #Median of Experiment
data = Final_df8 %>% filter(Experiment != "AT1G64550(E,A)"),
mapping = aes(x = Experiment, y = Value),
alpha = 0.3,
outlier.shape = NA,
lwd = 0.7,
fatten = 2
) +
geom_segment(
aes(x = 22.7, xend = 28.3, y = 20, yend = 20)) +
annotate(
"text", x = 25.5, y = 21.5, label = "NS", size = 3) +
scale_fill_manual(values = CUD) +
theme_classic() +
coord_cartesian(ylim = c(-20, 60)) +
theme(
legend.position ="none",
axis.text.x = element_text(angle = 35, hjust=1),
axis.title.x = element_blank(),
text = element_text(family = "Helvetica", size = 12)) +
ylab("Normalized Fluorescence")
short_plot
ggsave("../Figures/Figure2_simplified.svg", plot = last_plot(), width = 8.4, height = 4.2, units = "cm", dpi = 600, scale = 3)
